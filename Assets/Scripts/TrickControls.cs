//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/TrickControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TrickControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TrickControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TrickControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""1ee72d8c-9063-402d-a9b0-bc77188f73b9"",
            ""actions"": [
                {
                    ""name"": ""Pop"",
                    ""type"": ""Button"",
                    ""id"": ""3e9ddf1d-66a8-4a2b-bc6c-ef5cf52e4280"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lift"",
                    ""type"": ""Button"",
                    ""id"": ""34d4daf9-4795-4d4b-9f84-c9c4ecbbf8ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""dd5a827f-3b54-4edd-9bf9-f26fa45d8b32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heel"",
                    ""type"": ""Button"",
                    ""id"": ""95f314f6-e31c-45ff-b076-0c6df6c1463a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shuvit"",
                    ""type"": ""Button"",
                    ""id"": ""db3b64b8-2412-480d-9aef-8b86d89d08e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flip"",
                    ""type"": ""Button"",
                    ""id"": ""3d4d263e-9ec3-43af-99ff-f795f3732a67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Push"",
                    ""type"": ""Button"",
                    ""id"": ""76a75cc8-6b32-41d8-b462-43f2aa53ac9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""c3ae5f7a-5233-48ee-ad53-b72d2fc1b9f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnRight"",
                    ""type"": ""Button"",
                    ""id"": ""51e25b00-b393-44c6-b846-36c31bfcdd59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnLeft"",
                    ""type"": ""Button"",
                    ""id"": ""4779c85c-5c20-4e82-9dc1-6d2003aa7a97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""e2ad5e8a-7a6b-4319-9f02-16d797b84f3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""846223dc-757f-49ce-b23d-dbeea8b24817"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""620f8770-5a97-4299-87df-72e37a3dfc5b"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cd79d3b-0ada-40d2-a184-b5d1fb44cffa"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dc2789f-faef-4cb8-9c44-3f279555dafd"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbbbcf07-a75d-4496-8073-32a851441541"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51c5e78c-d365-4628-a381-7db4f98e3124"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shuvit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e3c6498-651c-4dd1-bc0a-5f11ba31a786"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cf2ac33-ca44-4ba1-87be-a3d99bd3e550"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a09d384-e867-4f32-9403-9207c21327eb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""804d7a26-59cb-4c3f-b69c-5f9d4f25d2e5"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79274542-5b3e-44a2-b38a-39aed4b6d338"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a68b1a7d-ca85-475b-8bf7-361cfe0b08a2"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""346cbe41-b715-4233-ad9e-e394ab87049a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1460aa41-b55d-467a-a009-64038727af00"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Pop = m_Gameplay.FindAction("Pop", throwIfNotFound: true);
        m_Gameplay_Lift = m_Gameplay.FindAction("Lift", throwIfNotFound: true);
        m_Gameplay_Kick = m_Gameplay.FindAction("Kick", throwIfNotFound: true);
        m_Gameplay_Heel = m_Gameplay.FindAction("Heel", throwIfNotFound: true);
        m_Gameplay_Shuvit = m_Gameplay.FindAction("Shuvit", throwIfNotFound: true);
        m_Gameplay_Flip = m_Gameplay.FindAction("Flip", throwIfNotFound: true);
        m_Gameplay_Push = m_Gameplay.FindAction("Push", throwIfNotFound: true);
        m_Gameplay_Brake = m_Gameplay.FindAction("Brake", throwIfNotFound: true);
        m_Gameplay_TurnRight = m_Gameplay.FindAction("TurnRight", throwIfNotFound: true);
        m_Gameplay_TurnLeft = m_Gameplay.FindAction("TurnLeft", throwIfNotFound: true);
        m_Gameplay_Reset = m_Gameplay.FindAction("Reset", throwIfNotFound: true);
        m_Gameplay_Pause = m_Gameplay.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Pop;
    private readonly InputAction m_Gameplay_Lift;
    private readonly InputAction m_Gameplay_Kick;
    private readonly InputAction m_Gameplay_Heel;
    private readonly InputAction m_Gameplay_Shuvit;
    private readonly InputAction m_Gameplay_Flip;
    private readonly InputAction m_Gameplay_Push;
    private readonly InputAction m_Gameplay_Brake;
    private readonly InputAction m_Gameplay_TurnRight;
    private readonly InputAction m_Gameplay_TurnLeft;
    private readonly InputAction m_Gameplay_Reset;
    private readonly InputAction m_Gameplay_Pause;
    public struct GameplayActions
    {
        private @TrickControls m_Wrapper;
        public GameplayActions(@TrickControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pop => m_Wrapper.m_Gameplay_Pop;
        public InputAction @Lift => m_Wrapper.m_Gameplay_Lift;
        public InputAction @Kick => m_Wrapper.m_Gameplay_Kick;
        public InputAction @Heel => m_Wrapper.m_Gameplay_Heel;
        public InputAction @Shuvit => m_Wrapper.m_Gameplay_Shuvit;
        public InputAction @Flip => m_Wrapper.m_Gameplay_Flip;
        public InputAction @Push => m_Wrapper.m_Gameplay_Push;
        public InputAction @Brake => m_Wrapper.m_Gameplay_Brake;
        public InputAction @TurnRight => m_Wrapper.m_Gameplay_TurnRight;
        public InputAction @TurnLeft => m_Wrapper.m_Gameplay_TurnLeft;
        public InputAction @Reset => m_Wrapper.m_Gameplay_Reset;
        public InputAction @Pause => m_Wrapper.m_Gameplay_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Pop.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPop;
                @Pop.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPop;
                @Pop.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPop;
                @Lift.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLift;
                @Lift.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLift;
                @Lift.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLift;
                @Kick.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnKick;
                @Heel.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHeel;
                @Heel.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHeel;
                @Heel.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHeel;
                @Shuvit.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShuvit;
                @Shuvit.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShuvit;
                @Shuvit.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnShuvit;
                @Flip.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlip;
                @Flip.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlip;
                @Flip.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlip;
                @Push.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPush;
                @Push.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPush;
                @Push.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPush;
                @Brake.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBrake;
                @TurnRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnRight;
                @TurnRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnRight;
                @TurnRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnRight;
                @TurnLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnLeft;
                @TurnLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnLeft;
                @TurnLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTurnLeft;
                @Reset.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
                @Pause.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pop.started += instance.OnPop;
                @Pop.performed += instance.OnPop;
                @Pop.canceled += instance.OnPop;
                @Lift.started += instance.OnLift;
                @Lift.performed += instance.OnLift;
                @Lift.canceled += instance.OnLift;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
                @Heel.started += instance.OnHeel;
                @Heel.performed += instance.OnHeel;
                @Heel.canceled += instance.OnHeel;
                @Shuvit.started += instance.OnShuvit;
                @Shuvit.performed += instance.OnShuvit;
                @Shuvit.canceled += instance.OnShuvit;
                @Flip.started += instance.OnFlip;
                @Flip.performed += instance.OnFlip;
                @Flip.canceled += instance.OnFlip;
                @Push.started += instance.OnPush;
                @Push.performed += instance.OnPush;
                @Push.canceled += instance.OnPush;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @TurnRight.started += instance.OnTurnRight;
                @TurnRight.performed += instance.OnTurnRight;
                @TurnRight.canceled += instance.OnTurnRight;
                @TurnLeft.started += instance.OnTurnLeft;
                @TurnLeft.performed += instance.OnTurnLeft;
                @TurnLeft.canceled += instance.OnTurnLeft;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnPop(InputAction.CallbackContext context);
        void OnLift(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
        void OnHeel(InputAction.CallbackContext context);
        void OnShuvit(InputAction.CallbackContext context);
        void OnFlip(InputAction.CallbackContext context);
        void OnPush(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnTurnRight(InputAction.CallbackContext context);
        void OnTurnLeft(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
